{"ast":null,"code":"var _jsxFileName = \"/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js\";\nimport React from 'react';\nimport { createStore, createEvent, createStoreObject } from 'effector';\nimport { createComponent } from 'effector-react';\nimport './add-product-form.css';\nvar cellBarcodeInput = createStore('');\nvar productBarcodeInput = createStore('');\nvar amountInput = createStore('');\nvar changeCellBarcodeInput = createEvent('cell barcode product form');\nvar changeProductBarcodeInput = createEvent('product barcode product form');\nvar changeAmountInput = createEvent('amount input product form');\nvar resetField = createEvent('reset field product form');\ncellBarcodeInput.on(changeCellBarcodeInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\nproductBarcodeInput.on(changeProductBarcodeInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\namountInput.on(changeAmountInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\nvar CellBarcodeInput = createComponent(productBarcodeInput, function (props, text) {\n  return React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Cell Barcode\", React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: function onChange(event) {\n      return changeCellBarcodeInput(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n});\nvar ProductBarcodeInput = createComponent(productBarcodeInput, function (props, text) {\n  return React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Product Barcode\", React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: function onChange(event) {\n      return changeProductBarcodeInput(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n});\nvar AmountInput = changeAmountInput(changeAmountInput, function (props, text) {\n  return React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Amount\", React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: function onChange(event) {\n      return changeAmountInput(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n});\n\nvar AddProductForm = function AddProductForm() {\n  return React.createElement(\"form\", {\n    className: \"add-product-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(CellBarcodeInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(ProductBarcodeInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(AmountInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Add Product\"), React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Take Product\"));\n};\n\nexport default AddProductForm;\ncellBarcodeInput.watch(console.log);\nproductBarcodeInput.watch(console.log);\namountInput.watch(console.log);","map":{"version":3,"sources":["/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js"],"names":["React","createStore","createEvent","createStoreObject","createComponent","cellBarcodeInput","productBarcodeInput","amountInput","changeCellBarcodeInput","changeProductBarcodeInput","changeAmountInput","resetField","on","state","payload","reset","CellBarcodeInput","props","text","event","target","value","ProductBarcodeInput","AmountInput","AddProductForm","watch","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStore, createEvent, createStoreObject } from 'effector';\nimport { createComponent } from 'effector-react';\nimport './add-product-form.css';\n\nconst cellBarcodeInput = createStore('');\nconst productBarcodeInput = createStore('');\nconst amountInput = createStore('');\n\nconst changeCellBarcodeInput = createEvent('cell barcode product form');\nconst changeProductBarcodeInput = createEvent('product barcode product form');\nconst changeAmountInput = createEvent('amount input product form');\nconst resetField = createEvent('reset field product form');\n\ncellBarcodeInput\n  .on(changeCellBarcodeInput, (state, payload) => payload)\n  .reset(resetField);\n\nproductBarcodeInput\n  .on(changeProductBarcodeInput, (state, payload) => payload)\n  .reset(resetField);\n\namountInput\n  .on(changeAmountInput, (state, payload) => payload)\n  .reset(resetField);\n\n\nconst CellBarcodeInput = createComponent(\n  productBarcodeInput, (props, text) => {\n    return (\n      <label>\n        Cell Barcode\n        <input \n          type=\"text\"\n          value={text}\n          onChange={event => changeCellBarcodeInput(event.target.value)} \n        />\n      </label>\n    )\n  }\n);\n\nconst ProductBarcodeInput = createComponent(\n  productBarcodeInput, (props, text) => {\n    return (\n      <label>\n        Product Barcode\n        <input \n          type=\"text\"\n          value={text}\n          onChange={event => changeProductBarcodeInput(event.target.value)}\n        />\n      </label>\n    )\n  }\n);\n\nconst AmountInput = changeAmountInput(\n  changeAmountInput, (props, text) => {\n    return (\n      <label>\n        Amount\n        <input \n          type=\"text\"\n          value={text}\n          onChange={event => changeAmountInput(event.target.value)}\n        />\n      </label>\n    )\n  }\n);\n\nconst AddProductForm = () => {\n  return (\n    <form className=\"add-product-form\">\n      <CellBarcodeInput />\n      <ProductBarcodeInput />\n      <AmountInput />\n\n      <button className=\"btn btn-outline-secondary\">\n        Add Product\n      </button>\n      <button className=\"btn btn-outline-secondary\">\n        Take Product\n      </button>\n    </form>\n  )\n};\n\nexport default AddProductForm;\n\ncellBarcodeInput.watch(console.log)\nproductBarcodeInput.watch(console.log)\namountInput.watch(console.log)"]},"metadata":{},"sourceType":"module"}