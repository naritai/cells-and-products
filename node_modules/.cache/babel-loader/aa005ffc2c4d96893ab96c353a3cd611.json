{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Wave/Desktop/cells-products/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-top: 30px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { vaildateFormInputs } from './utils';\nimport { GeneralForm, GeneralButton } from '../general-styled-components';\nimport { addNewProductAction } from '../cell-list';\nimport styled from 'styled-components';\nimport { CellBarcodeInput, cellBarcodeInput as cellBarcodeStore, resetCell } from './cell-barcode-input';\nimport { ProductBarcodeInput, productBarcodeInput as productBarcodeStore, resetProduct } from './product-barcode-input';\nimport { AmountInput, amountInput as amountStore, resetAmount } from './amount-input';\n\nvar AddProductForm = function AddProductForm() {\n  var addProduct = function addProduct(event) {\n    event.preventDefault();\n    var cellBarcode = cellBarcodeStore.getState();\n    var productBarcode = productBarcodeStore.getState();\n    var amount = amountStore.getState();\n    var message = vaildateFormInputs(cellBarcode, productBarcode, amount, resetAmount);\n\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, amount);\n      resetProduct();\n      resetAmount();\n      resetCell();\n    }\n  };\n\n  var takeProduct = function takeProduct(event) {\n    event.preventDefault();\n    var cellBarcode = cellBarcodeStore.getState();\n    var productBarcode = productBarcodeStore.getState();\n    var amount = amountStore.getState();\n    var message = vaildateFormInputs(cellBarcode, productBarcode, amount, resetAmount);\n\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, -amount);\n      resetProduct();\n      resetAmount();\n      resetCell();\n    }\n  };\n\n  return React.createElement(GeneralForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CellBarcodeInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(ProductBarcodeInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(AmountInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(ButtonWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(GeneralButton, {\n    className: \"btn btn-outline-secondary\",\n    onClick: addProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Add Product\"), React.createElement(GeneralButton, {\n    className: \"btn btn-outline-secondary\",\n    onClick: takeProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Take Product\")));\n};\n\nvar ButtonWrapper = styled.div(_templateObject());\nexport default AddProductForm;","map":{"version":3,"sources":["/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js"],"names":["React","vaildateFormInputs","GeneralForm","GeneralButton","addNewProductAction","styled","CellBarcodeInput","cellBarcodeInput","cellBarcodeStore","resetCell","ProductBarcodeInput","productBarcodeInput","productBarcodeStore","resetProduct","AmountInput","amountInput","amountStore","resetAmount","AddProductForm","addProduct","event","preventDefault","cellBarcode","getState","productBarcode","amount","message","alert","takeProduct","ButtonWrapper","div"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,SAAnC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,8BAA3C;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SACEC,gBADF,EAEEC,gBAAgB,IAAIC,gBAFtB,EAGEC,SAHF,QAIO,sBAJP;AAMA,SACEC,mBADF,EAEEC,mBAAmB,IAAIC,mBAFzB,EAGEC,YAHF,QAIO,yBAJP;AAMA,SACEC,WADF,EAEEC,WAAW,IAAIC,WAFjB,EAGEC,WAHF,QAIO,gBAJP;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,WAAW,GAAGd,gBAAgB,CAACe,QAAjB,EAApB;AACA,QAAMC,cAAc,GAAGZ,mBAAmB,CAACW,QAApB,EAAvB;AACA,QAAME,MAAM,GAAGT,WAAW,CAACO,QAAZ,EAAf;AACA,QAAMG,OAAO,GAAGzB,kBAAkB,CAACqB,WAAD,EAAcE,cAAd,EAA8BC,MAA9B,EAAsCR,WAAtC,CAAlC;;AACA,QAAIS,OAAJ,EAAa;AACXC,MAAAA,KAAK,CAACD,OAAD,CAAL;AACA;AACD,KAHD,MAGO;AACLtB,MAAAA,mBAAmB,CAACkB,WAAD,EAAcE,cAAd,EAA8BC,MAA9B,CAAnB;AACAZ,MAAAA,YAAY;AACZI,MAAAA,WAAW;AACXR,MAAAA,SAAS;AACV;AACF,GAfD;;AAiBA,MAAMmB,WAAW,GAAG,SAAdA,WAAc,CAACR,KAAD,EAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,WAAW,GAAGd,gBAAgB,CAACe,QAAjB,EAApB;AACA,QAAMC,cAAc,GAAGZ,mBAAmB,CAACW,QAApB,EAAvB;AACA,QAAME,MAAM,GAAGT,WAAW,CAACO,QAAZ,EAAf;AACA,QAAMG,OAAO,GAAGzB,kBAAkB,CAACqB,WAAD,EAAcE,cAAd,EAA8BC,MAA9B,EAAsCR,WAAtC,CAAlC;;AACA,QAAIS,OAAJ,EAAa;AACXC,MAAAA,KAAK,CAACD,OAAD,CAAL;AACA;AACD,KAHD,MAGO;AACLtB,MAAAA,mBAAmB,CAACkB,WAAD,EAAcE,cAAd,EAA8B,CAACC,MAA/B,CAAnB;AACAZ,MAAAA,YAAY;AACZI,MAAAA,WAAW;AACXR,MAAAA,SAAS;AACV;AACF,GAfD;;AAiBA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,OAAO,EAAEU,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAME,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,OAAO,EAAES,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CALF,CADF;AAoBD,CAvDD;;AAyDA,IAAMC,aAAa,GAAGxB,MAAM,CAACyB,GAAV,mBAAnB;AAKA,eAAeZ,cAAf","sourcesContent":["import React from 'react';\nimport { vaildateFormInputs } from './utils';\nimport { GeneralForm, GeneralButton } from '../general-styled-components';\nimport { addNewProductAction } from '../cell-list';\nimport styled from 'styled-components';\n\nimport {\n  CellBarcodeInput,\n  cellBarcodeInput as cellBarcodeStore,\n  resetCell\n} from './cell-barcode-input';\n\nimport {\n  ProductBarcodeInput,\n  productBarcodeInput as productBarcodeStore,\n  resetProduct\n} from './product-barcode-input';\n\nimport {\n  AmountInput,\n  amountInput as amountStore,\n  resetAmount\n} from './amount-input';\n\nconst AddProductForm = () => {\n  const addProduct = (event) => {\n    event.preventDefault();\n    const cellBarcode = cellBarcodeStore.getState();\n    const productBarcode = productBarcodeStore.getState();\n    const amount = amountStore.getState();\n    const message = vaildateFormInputs(cellBarcode, productBarcode, amount, resetAmount);\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, amount);\n      resetProduct();\n      resetAmount();\n      resetCell();\n    }\n  };\n\n  const takeProduct = (event) => {\n    event.preventDefault();\n    const cellBarcode = cellBarcodeStore.getState();\n    const productBarcode = productBarcodeStore.getState();\n    const amount = amountStore.getState();\n    const message = vaildateFormInputs(cellBarcode, productBarcode, amount, resetAmount);\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, -amount);\n      resetProduct();\n      resetAmount();\n      resetCell();\n    }\n  };\n\n  return (\n    <GeneralForm>\n      <CellBarcodeInput />\n      <ProductBarcodeInput />\n      <AmountInput />\n\n      <ButtonWrapper>\n        <GeneralButton\n          className=\"btn btn-outline-secondary\"\n          onClick={addProduct}>\n          Add Product\n        </GeneralButton>\n        <GeneralButton\n          className=\"btn btn-outline-secondary\"\n          onClick={takeProduct}>\n          Take Product\n        </GeneralButton>\n      </ButtonWrapper>\n    </GeneralForm>\n  )\n};\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  margin-top: 30px;\n`;\n\nexport default AddProductForm;\n"]},"metadata":{},"sourceType":"module"}