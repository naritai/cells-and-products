{"ast":null,"code":"var _jsxFileName = \"/Users/Wave/Desktop/cells-products/src/components/add-cell-form/add-cell-form.js\";\nimport React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport { addSomething } from '../cell-list';\nimport './add-cell-form.css';\nvar addCellInput = createStore('');\nvar changeAddCellInput = createEvent('change add cell input');\nvar resetField = createEvent('reset field');\naddCellInput.on(changeAddCellInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\nvar AddCellForm = createComponent(addCellInput, function (props, text) {\n  var addNewCell = function addNewCell(event) {\n    event.preventDefault();\n    var barcode = addCellInput.getState();\n    addSomething(barcode);\n    resetField();\n  };\n\n  return React.createElement(\"form\", {\n    className: \"add-cell-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Cell Barcode\", React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: function onChange(event) {\n      return changeAddCellInput(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: addNewCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Add Cell\"));\n});\nexport default AddCellForm;","map":{"version":3,"sources":["/Users/Wave/Desktop/cells-products/src/components/add-cell-form/add-cell-form.js"],"names":["React","createStore","createEvent","createComponent","addSomething","addCellInput","changeAddCellInput","resetField","on","state","payload","reset","AddCellForm","props","text","addNewCell","event","preventDefault","barcode","getState","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAO,qBAAP;AAEA,IAAMC,YAAY,GAAGJ,WAAW,CAAC,EAAD,CAAhC;AACA,IAAMK,kBAAkB,GAAGJ,WAAW,CAAC,uBAAD,CAAtC;AACA,IAAMK,UAAU,GAAGL,WAAW,CAAC,aAAD,CAA9B;AAEAG,YAAY,CACTG,EADH,CACMF,kBADN,EAC0B,UAACG,KAAD,EAAQC,OAAR;AAAA,SAAoBA,OAApB;AAAA,CAD1B,EAEGC,KAFH,CAESJ,UAFT;AAIA,IAAMK,WAAW,GAAGT,eAAe,CACjCE,YADiC,EACnB,UAACQ,KAAD,EAAQC,IAAR,EAAiB;AAC7B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,OAAO,GAAGb,YAAY,CAACc,QAAb,EAAhB;AACAf,IAAAA,YAAY,CAACc,OAAD,CAAZ;AACAX,IAAAA,UAAU;AACX,GALD;;AAOA,SACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEO,IAFT;AAGE,IAAA,QAAQ,EAAE,kBAAAE,KAAK;AAAA,aAAIV,kBAAkB,CAACU,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAtB;AAAA,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,OAAO,EAAEN,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADF;AAiBD,CA1BgC,CAAnC;AA6BA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport { addSomething } from '../cell-list';\nimport './add-cell-form.css';\n\nconst addCellInput = createStore('');\nconst changeAddCellInput = createEvent('change add cell input');\nconst resetField = createEvent('reset field');\n\naddCellInput\n  .on(changeAddCellInput, (state, payload) => payload)\n  .reset(resetField);\n\nconst AddCellForm = createComponent(\n  addCellInput, (props, text) => {\n    const addNewCell = (event) => {\n      event.preventDefault();\n      const barcode = addCellInput.getState();\n      addSomething(barcode);\n      resetField();\n    };\n\n    return (\n      <form className=\"add-cell-form\">\n        <label>\n          Cell Barcode\n          <input \n            type=\"text\"\n            value={text}\n            onChange={event => changeAddCellInput(event.target.value)} />\n        </label>\n\n        <button \n          className=\"btn btn-outline-secondary\"\n          onClick={addNewCell}>\n          Add Cell\n        </button>\n    </form>\n    )\n  }\n);\n\nexport default AddCellForm;\n"]},"metadata":{},"sourceType":"module"}