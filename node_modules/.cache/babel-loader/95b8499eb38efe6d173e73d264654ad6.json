{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Wave/Desktop/cells-products/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Wave/Desktop/cells-products/src/components/add-product-form/cell-barcode-input.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  > span {\\n    margin-left: 10px;\\n    font-size: 20px;\\n    font-weight: 600;\\n    color: #E4F1FE;\\n    vertical-align: bottom;\\n    text-transform: uppercase;\\n  }\\n\\n  > input {\\n    display: inline-block;\\n    width: 200px;\\n    height: 40px;\\n\\n    border: none;\\n    outline: none;\\n    border-bottom: 5px solid #BDC3C7;\\n    background-color: #34495E;\\n\\n    font-size: 20px;\\n    font-weight: 600;\\n    color: #E4F1FE;\\n  }\\n\\n  margin-bottom: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport styled from 'styled-components';\nvar cellBarcodeInput = createStore('');\nvar changeCellBarcodeInput = createEvent('cell barcode product form');\nvar resetField = createEvent('reset field product form');\nvar CellBarcodeInput = createComponent(cellBarcodeInput, function (props, text) {\n  return React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    placeholder: \"12345\",\n    onChange: function onChange(event) {\n      return changeCellBarcodeInput(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Cell Barcode\"));\n});\ncellBarcodeInput.on(changeCellBarcodeInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\nvar Label = styled.label(_templateObject());\nexport default CellBarcodeInput;","map":{"version":3,"sources":["/Users/Wave/Desktop/cells-products/src/components/add-product-form/cell-barcode-input.js"],"names":["React","createStore","createEvent","createComponent","styled","cellBarcodeInput","changeCellBarcodeInput","resetField","CellBarcodeInput","props","text","event","target","value","on","state","payload","reset","Label","label"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,gBAAgB,GAAGJ,WAAW,CAAC,EAAD,CAApC;AACA,IAAMK,sBAAsB,GAAGJ,WAAW,CAAC,2BAAD,CAA1C;AACA,IAAMK,UAAU,GAAGL,WAAW,CAAC,0BAAD,CAA9B;AAGA,IAAMM,gBAAgB,GAAGL,eAAe,CACtCE,gBADsC,EACpB,UAACI,KAAD,EAAQC,IAAR,EAAiB;AACjC,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEA,IAFT;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,aAAIL,sBAAsB,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA1B;AAAA,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF;AAaD,CAfqC,CAAxC;AAkBAR,gBAAgB,CACbS,EADH,CACMR,sBADN,EAC8B,UAACS,KAAD,EAAQC,OAAR;AAAA,SAAoBA,OAApB;AAAA,CAD9B,EAEGC,KAFH,CAESV,UAFT;AAIA,IAAMW,KAAK,GAAGd,MAAM,CAACe,KAAV,mBAAX;AA4BA,eAAeX,gBAAf","sourcesContent":["import React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport styled from 'styled-components';\n\nconst cellBarcodeInput = createStore('');\nconst changeCellBarcodeInput = createEvent('cell barcode product form');\nconst resetField = createEvent('reset field product form');\n\n\nconst CellBarcodeInput = createComponent(\n  cellBarcodeInput, (props, text) => {\n    return (\n      <Label>\n        <input \n          type=\"text\"\n          value={text}\n          placeholder=\"12345\"\n          onChange={event => changeCellBarcodeInput(event.target.value)} \n        />\n        <span>\n          Cell Barcode\n        </span>\n      </Label>\n    )\n  }\n);\n\ncellBarcodeInput\n  .on(changeCellBarcodeInput, (state, payload) => payload)\n  .reset(resetField);\n\nconst Label = styled.label`\n  > span {\n    margin-left: 10px;\n    font-size: 20px;\n    font-weight: 600;\n    color: #E4F1FE;\n    vertical-align: bottom;\n    text-transform: uppercase;\n  }\n\n  > input {\n    display: inline-block;\n    width: 200px;\n    height: 40px;\n\n    border: none;\n    outline: none;\n    border-bottom: 5px solid #BDC3C7;\n    background-color: #34495E;\n\n    font-size: 20px;\n    font-weight: 600;\n    color: #E4F1FE;\n  }\n\n  margin-bottom: 10px;\n`;\n\nexport default CellBarcodeInput;\n"]},"metadata":{},"sourceType":"module"}