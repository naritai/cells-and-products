{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Wave/Desktop/cells-products/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n  width: 500px;\\n  padding: 5px;\\n  margin-right: 20px;\\n  border-left: 10px solid #FDE3A7;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  > span {\\n    margin-left: 20px;\\n    font-size: 20px;\\n    font-weight: 600;\\n    color: #E4F1FE;\\n\\n    text-transform: uppercase;\\n  }\\n\\n  > input {\\n    display: inline-block;\\n    width: 200px;\\n    height: 40px;\\n\\n    border: none;\\n    outline: none;\\n    border-bottom: 5px solid #BDC3C7;\\n    background-color: #34495E;\\n\\n    font-size: 20px;\\n    font-weight: 600;\\n    color: #E4F1FE;\\n  }\\n\\n  margin-bottom: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport styled from 'styled-components';\nimport { addNewProductAction } from '../cell-list';\nvar cellBarcodeInput = createStore('');\nvar productBarcodeInput = createStore('');\nvar amountInput = createStore('');\nvar changeCellBarcodeInput = createEvent('cell barcode product form');\nvar changeProductBarcodeInput = createEvent('product barcode product form');\nvar changeAmountInput = createEvent('amount input product form');\nvar resetField = createEvent('reset field product form');\nvar resetAmountField = createEvent('reset amount field product form');\ncellBarcodeInput.on(changeCellBarcodeInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\nproductBarcodeInput.on(changeProductBarcodeInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\namountInput.on(changeAmountInput, function (state, payload) {\n  return payload;\n}).reset(resetAmountField);\nvar CellBarcodeInput = createComponent(cellBarcodeInput, function (props, text) {\n  return React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    placeholder: \"12345\",\n    onChange: function onChange(event) {\n      return changeCellBarcodeInput(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Cell Barcode\"));\n});\nvar ProductBarcodeInput = createComponent(productBarcodeInput, function (props, text) {\n  return React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    placeholder: \"12345\",\n    onChange: function onChange(event) {\n      return changeProductBarcodeInput(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Product Barcode\"));\n});\nvar AmountInput = createComponent(amountInput, function (props, text) {\n  return React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    placeholder: \"20\",\n    onChange: function onChange(event) {\n      return changeAmountInput(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Amount\"));\n});\n\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nvar vaildateFormInputs = function vaildateFormInputs(cellBarcode, productBarcode, amount) {\n  var message = '';\n\n  if (cellBarcode.trim() === '' || productBarcode.trim() === '' || amount.trim() === '') {\n    message += \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0435 \\u043F\\u043E\\u043B\\u044F. \";\n    return message;\n  }\n\n  ;\n\n  if (!isNumeric(amount) || amount === '0') {\n    message += \"\\u041F\\u043E\\u043B\\u0435 \\\"Amount\\\" \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u0447\\u0438\\u0441\\u043B\\u043E\\u043C \\u0438 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043F\\u0440\\u0438\\u043D\\u0438\\u043C\\u0430\\u0442\\u044C \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 0\";\n    resetAmountField();\n  }\n\n  ;\n  return message;\n};\n\nvar AddProductForm = function AddProductForm() {\n  var addProduct = function addProduct(event) {\n    event.preventDefault();\n    var cellBarcode = cellBarcodeInput.getState();\n    var productBarcode = productBarcodeInput.getState();\n    var amount = amountInput.getState();\n    var message = vaildateFormInputs(cellBarcode, productBarcode, amount);\n\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, amount);\n      resetField();\n      resetAmountField();\n    }\n  };\n\n  var takeProduct = function takeProduct(event) {\n    event.preventDefault();\n    var cellBarcode = cellBarcodeInput.getState();\n    var productBarcode = productBarcodeInput.getState();\n    var amount = amountInput.getState();\n    var message = vaildateFormInputs(cellBarcode, productBarcode, amount);\n\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, -amount);\n      resetField();\n      resetAmountField();\n    }\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(CellBarcodeInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(ProductBarcodeInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(AmountInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: addProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Add Product\"), React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: takeProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Take Product\"));\n};\n\nvar Label = styled.label(_templateObject());\nvar Form = styled.form(_templateObject2());\nexport default AddProductForm;","map":{"version":3,"sources":["/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js"],"names":["React","createStore","createEvent","createComponent","styled","addNewProductAction","cellBarcodeInput","productBarcodeInput","amountInput","changeCellBarcodeInput","changeProductBarcodeInput","changeAmountInput","resetField","resetAmountField","on","state","payload","reset","CellBarcodeInput","props","text","event","target","value","ProductBarcodeInput","AmountInput","isNumeric","n","isNaN","parseFloat","isFinite","vaildateFormInputs","cellBarcode","productBarcode","amount","message","trim","AddProductForm","addProduct","preventDefault","getState","alert","takeProduct","Label","label","Form","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport styled from 'styled-components';\nimport { addNewProductAction } from '../cell-list';\n\nconst cellBarcodeInput = createStore('');\nconst productBarcodeInput = createStore('');\nconst amountInput = createStore('');\n\nconst changeCellBarcodeInput = createEvent('cell barcode product form');\nconst changeProductBarcodeInput = createEvent('product barcode product form');\nconst changeAmountInput = createEvent('amount input product form');\nconst resetField = createEvent('reset field product form');\nconst resetAmountField = createEvent('reset amount field product form');\n\ncellBarcodeInput\n  .on(changeCellBarcodeInput, (state, payload) => payload)\n  .reset(resetField);\n\nproductBarcodeInput\n  .on(changeProductBarcodeInput, (state, payload) => payload)\n  .reset(resetField);\n\namountInput\n  .on(changeAmountInput, (state, payload) => payload)\n  .reset(resetAmountField);\n\n\n\n\nconst CellBarcodeInput = createComponent(\n  cellBarcodeInput, (props, text) => {\n    return (\n      <Label>\n        <input \n          type=\"text\"\n          value={text}\n          placeholder=\"12345\"\n          onChange={event => changeCellBarcodeInput(event.target.value)} \n        />\n        <span>\n          Cell Barcode\n        </span>\n      </Label>\n    )\n  }\n);\n\nconst ProductBarcodeInput = createComponent(\n  productBarcodeInput, (props, text) => {\n    return (\n      <Label>\n        <input \n          type=\"text\"\n          value={text}\n          placeholder=\"12345\"\n          onChange={event => changeProductBarcodeInput(event.target.value)}\n        />\n        <span>\n          Product Barcode\n        </span>\n      </Label>\n    )\n  }\n);\n\nconst AmountInput = createComponent(\n  amountInput, (props, text) => {\n    return (\n      <Label>\n        <input \n          type=\"text\"\n          value={text}\n          placeholder=\"20\"\n          onChange={event => changeAmountInput(event.target.value)}\n        />\n        <span>\n          Amount\n        </span>\n      </Label>\n    )\n  }\n);\n\nconst isNumeric = (n) => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst vaildateFormInputs = (cellBarcode, productBarcode, amount) => {\n  let message = '';\n\n  if (cellBarcode.trim() === '' \n      || productBarcode.trim() === '' \n      || amount.trim() === '') {\n    message += `Пожалуйста, заполните все поля. `;\n    return message;\n  };\n\n  if (!isNumeric(amount) || amount === '0') {\n    message += `Поле \"Amount\" должно быть числом и не может принимать значение 0`;\n    resetAmountField();\n  };\n\n  return message;\n}\n\nconst AddProductForm = () => {\n  const addProduct = (event) => {\n    event.preventDefault();\n    const cellBarcode = cellBarcodeInput.getState();\n    const productBarcode = productBarcodeInput.getState();\n    const amount = amountInput.getState();\n    const message = vaildateFormInputs(cellBarcode, productBarcode, amount);\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, amount);\n      resetField();\n      resetAmountField();\n    }\n  };\n\n  const takeProduct = (event) => {\n    event.preventDefault();\n    const cellBarcode = cellBarcodeInput.getState();\n    const productBarcode = productBarcodeInput.getState();\n    const amount = amountInput.getState();\n    const message = vaildateFormInputs(cellBarcode, productBarcode, amount);\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, -amount);\n      resetField();\n      resetAmountField();\n    }\n  };\n\n\n  return (\n    <Form>\n      <CellBarcodeInput />\n      <ProductBarcodeInput />\n      <AmountInput />\n\n      <button \n        className=\"btn btn-outline-secondary\"\n        onClick={addProduct}>\n        Add Product\n      </button>\n      <button \n        className=\"btn btn-outline-secondary\"\n        onClick={takeProduct}>\n        Take Product\n      </button>\n    </Form>\n  )\n};\n\nconst Label = styled.label`\n  > span {\n    margin-left: 20px;\n    font-size: 20px;\n    font-weight: 600;\n    color: #E4F1FE;\n\n    text-transform: uppercase;\n  }\n\n  > input {\n    display: inline-block;\n    width: 200px;\n    height: 40px;\n\n    border: none;\n    outline: none;\n    border-bottom: 5px solid #BDC3C7;\n    background-color: #34495E;\n\n    font-size: 20px;\n    font-weight: 600;\n    color: #E4F1FE;\n  }\n\n  margin-bottom: 10px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 500px;\n  padding: 5px;\n  margin-right: 20px;\n  border-left: 10px solid #FDE3A7;\n`;\n\nexport default AddProductForm;\n"]},"metadata":{},"sourceType":"module"}