{"ast":null,"code":"var _jsxFileName = \"/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js\";\nimport React from 'react';\nimport { createStore, createEvent, createStoreObject } from 'effector';\nimport { createStoreConsumer } from 'effector-react';\nimport './add-product-form.css';\nvar productBarcodeInput = createStore('');\nvar cellBarcodeInput = createStore('');\nvar amountInput = createStore('');\nvar changeProductBarcodeInput = createEvent('product barcode product form');\nvar changeCellBarcodeInput = createEvent('cell barcode product form');\nvar changeAmountInput = createEvent('amount input product form');\nvar resetField = createEvent('reset field product form');\nproductBarcodeInput.on(changeProductBarcodeInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\ncellBarcodeInput.on(changeCellBarcodeInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\namountInput.on(changeAmountInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\nvar store = createStoreObject({\n  productBarcodeInput: productBarcodeInput,\n  cellBarcodeInput: cellBarcodeInput,\n  amountInput: amountInput\n});\n\nvar AddProductFormTest = function AddProductFormTest() {\n  return createStoreConsumer = function createStoreConsumer(_ref) {\n    var productBarcodeInput = _ref.productBarcodeInput,\n        cellBarcodeInput = _ref.cellBarcodeInput,\n        amountInput = _ref.amountInput;\n    return React.createElement(\"form\", {\n      className: \"add-product-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Cell Barcode\", React.createElement(\"input\", {\n      type: \"text\",\n      value: productBarcodeInput,\n      onChange: function onChange(event) {\n        return changeProductBarcodeInput(event.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Product Barcode\", React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Amount\", React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Add Product\"), React.createElement(\"button\", {\n      className: \"btn btn-outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Take Product\"));\n  };\n};\n\nvar AddProductForm = function AddProductForm() {\n  return React.createElement(\"form\", {\n    className: \"add-product-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Cell Barcode\", React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Product Barcode\", React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Amount\", React.createElement(\"input\", {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Add Product\"), React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Take Product\"));\n};\n\nexport default AddProductForm;","map":{"version":3,"sources":["/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js"],"names":["React","createStore","createEvent","createStoreObject","createStoreConsumer","productBarcodeInput","cellBarcodeInput","amountInput","changeProductBarcodeInput","changeCellBarcodeInput","changeAmountInput","resetField","on","state","payload","reset","store","AddProductFormTest","event","target","value","AddProductForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStore, createEvent, createStoreObject } from 'effector';\nimport { createStoreConsumer } from 'effector-react';\nimport './add-product-form.css';\n\nconst productBarcodeInput = createStore('');\nconst cellBarcodeInput = createStore('');\nconst amountInput = createStore('');\n\nconst changeProductBarcodeInput = createEvent('product barcode product form');\nconst changeCellBarcodeInput = createEvent('cell barcode product form');\nconst changeAmountInput = createEvent('amount input product form');\nconst resetField = createEvent('reset field product form');\n\nproductBarcodeInput\n  .on(changeProductBarcodeInput, (state, payload) => payload)\n  .reset(resetField);\n\ncellBarcodeInput\n  .on(changeCellBarcodeInput, (state, payload) => payload)\n  .reset(resetField);\n\namountInput\n  .on(changeAmountInput, (state, payload) => payload)\n  .reset(resetField);\n\n\nconst store = createStoreObject({\n  productBarcodeInput,\n  cellBarcodeInput,\n  amountInput\n});\n\nconst AddProductFormTest = () => createStoreConsumer = ({\n  productBarcodeInput,\n  cellBarcodeInput,\n  amountInput\n}) => {\n  return (\n    <form className=\"add-product-form\">\n      <label>\n        Cell Barcode\n        <input \n          type=\"text\"\n          value={productBarcodeInput}\n          onChange={event => changeProductBarcodeInput(event.target.value)} />\n      </label>\n      <label>\n        Product Barcode\n        <input type=\"text\"/>\n      </label>\n      <label>\n        Amount\n        <input type=\"text\"/>\n      </label>\n\n      <button className=\"btn btn-outline-secondary\">\n        Add Product\n      </button>\n      <button className=\"btn btn-outline-secondary\">\n        Take Product\n      </button>\n    </form>\n  )\n}\n\nconst AddProductForm = () => {\n  return (\n    <form className=\"add-product-form\">\n      <label>\n        Cell Barcode\n        <input type=\"text\"/>\n      </label>\n      <label>\n        Product Barcode\n        <input type=\"text\"/>\n      </label>\n      <label>\n        Amount\n        <input type=\"text\"/>\n      </label>\n\n      <button className=\"btn btn-outline-secondary\">\n        Add Product\n      </button>\n      <button className=\"btn btn-outline-secondary\">\n        Take Product\n      </button>\n    </form>\n  )\n};\n\nexport default AddProductForm;\n"]},"metadata":{},"sourceType":"module"}