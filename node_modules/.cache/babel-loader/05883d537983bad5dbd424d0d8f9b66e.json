{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Wave/Desktop/cells-products/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Wave/Desktop/cells-products/src/components/test-styled-components/test-styled-components.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: 'tomato;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  color: \", \";\\n\\n  font-size: 1em;\\n  margin: 1em;\\n  padding: 0.25em 1em;\\n  border: 2px solid palevioletred;\\n  border-radius: 3px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 4em;\\n  background: papayawhip;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 1.5em;\\n  text-align: center;\\n  color: palevioletred;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components'; // могу создавать кастомные компоненты\n\nvar Title = styled.h1(_templateObject()); // могу создавать кастомные компоненты\n\nvar Wrapper = styled.section(_templateObject2()); // могу использовать пропсы внутри компонентов\n// такой синтаксис для удобства записи CSS\n\nvar Button = styled.button(_templateObject3(), function (props) {\n  return props.primary ? 'palevioletred' : 'white';\n}, function (props) {\n  return props.primary ? 'white' : 'palevioletred';\n}); // могу переиспользовать стили\n\nvar CutsomButton = styled(Button)(_templateObject4());\n\nvar Test = function Test() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Hello There!\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Normal\"), React.createElement(Button, {\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Primary\"), React.createElement(CutsomButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Tomato Button!\")));\n};\n\nexport default Test;\nconsole.log(styled.h1);","map":{"version":3,"sources":["/Users/Wave/Desktop/cells-products/src/components/test-styled-components/test-styled-components.js"],"names":["React","styled","Title","h1","Wrapper","section","Button","button","props","primary","CutsomButton","Test","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,IAAMC,KAAK,GAAGD,MAAM,CAACE,EAAV,mBAAX,C,CAMA;;AACA,IAAMC,OAAO,GAAGH,MAAM,CAACI,OAAV,oBAAb,C,CAMA;AACA;;AACA,IAAMC,MAAM,GAAGL,MAAM,CAACM,MAAV,qBACI,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,OAAN,GAAgB,eAAhB,GAAkC,OAAtC;AAAA,CADT,EAED,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACC,OAAN,GAAgB,OAAhB,GAA0B,eAA9B;AAAA,CAFJ,CAAZ,C,CAWA;;AACA,IAAMC,YAAY,GAAGT,MAAM,CAACK,MAAD,CAAT,oBAAlB;;AAKA,IAAMK,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF,CADF;AAUD,CAXD;;AAaA,eAAeA,IAAf;AAEAC,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAACE,EAAnB","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n// могу создавать кастомные компоненты\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\n// могу создавать кастомные компоненты\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: papayawhip;\n`;\n\n\n// могу использовать пропсы внутри компонентов\n// такой синтаксис для удобства записи CSS\nconst Button = styled.button`\n  background: ${props => props.primary ? 'palevioletred' : 'white' };\n  color: ${props => props.primary ? 'white' : 'palevioletred' };\n\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\n// могу переиспользовать стили\nconst CutsomButton = styled(Button)`\n  color: 'tomato;\n`;\n\n\nconst Test = () => {\n  return (\n    <div>\n      <Wrapper>\n        <Title>Hello There!</Title>\n        <Button>Normal</Button>\n        <Button primary>Primary</Button>\n        <CutsomButton>Tomato Button!</CutsomButton>\n      </Wrapper>\n    </div>\n  )\n};\n\nexport default Test;\n\nconsole.log(styled.h1);\n"]},"metadata":{},"sourceType":"module"}