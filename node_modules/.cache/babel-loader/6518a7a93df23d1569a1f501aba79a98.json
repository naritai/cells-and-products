{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Wave/Desktop/cells-products/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Wave/Desktop/cells-products/src/components/add-cell-form/add-cell-form.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  flex-wrap: wrap;\\n  width: 450px;\\n  height: 120px;\\n  padding: 5px;\\n  padding-bottom: 0;\\n  margin-right: 20px;\\n\\n  border-top: 10px solid #EB9532;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport { addNewCellAction } from '../cell-list';\nimport { GeneralLabel, GeneralButton, GeneralForm } from '../general-styled-components';\nimport styled from 'styled-components';\nvar addCellInput = createStore('');\nvar changeAddCellInput = createEvent('change add cell input');\nvar resetField = createEvent('reset field');\naddCellInput.on(changeAddCellInput, function (state, payload) {\n  return payload;\n}).reset(resetField);\nvar AddCellForm = createComponent(addCellInput, function (props, text) {\n  var addNewCell = function addNewCell(event) {\n    event.preventDefault();\n    var barcode = addCellInput.getState().trim();\n    addNewCellAction(barcode);\n    resetField();\n  };\n\n  return React.createElement(CustomForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(GeneralLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    placeholder: \"12345\",\n    onChange: function onChange(event) {\n      return changeAddCellInput(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Cell Barcode\")), React.createElement(GeneralButton, {\n    className: \"btn btn-outline-secondary\",\n    onClick: addNewCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Add Cell\"));\n});\nvar CustomForm = styled(GeneralForm)(_templateObject());\nexport default AddCellForm;","map":{"version":3,"sources":["/Users/Wave/Desktop/cells-products/src/components/add-cell-form/add-cell-form.js"],"names":["React","createStore","createEvent","createComponent","addNewCellAction","GeneralLabel","GeneralButton","GeneralForm","styled","addCellInput","changeAddCellInput","resetField","on","state","payload","reset","AddCellForm","props","text","addNewCell","event","preventDefault","barcode","getState","trim","target","value","CustomForm"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,QAAyD,8BAAzD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,YAAY,GAAGR,WAAW,CAAC,EAAD,CAAhC;AACA,IAAMS,kBAAkB,GAAGR,WAAW,CAAC,uBAAD,CAAtC;AACA,IAAMS,UAAU,GAAGT,WAAW,CAAC,aAAD,CAA9B;AAEAO,YAAY,CACTG,EADH,CACMF,kBADN,EAC0B,UAACG,KAAD,EAAQC,OAAR;AAAA,SAAoBA,OAApB;AAAA,CAD1B,EAEGC,KAFH,CAESJ,UAFT;AAIA,IAAMK,WAAW,GAAGb,eAAe,CACjCM,YADiC,EACnB,UAACQ,KAAD,EAAQC,IAAR,EAAiB;AAC7B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,OAAO,GAAGb,YAAY,CAACc,QAAb,GAAwBC,IAAxB,EAAhB;AACApB,IAAAA,gBAAgB,CAACkB,OAAD,CAAhB;AACAX,IAAAA,UAAU;AACX,GALD;;AAOA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEO,IAFT;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,QAAQ,EAAE,kBAAAE,KAAK;AAAA,aAAIV,kBAAkB,CAACU,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAtB;AAAA,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF,EAaE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,OAAO,EAAEP,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,CADF;AAqBD,CA9BgC,CAAnC;AAiCA,IAAMQ,UAAU,GAAGnB,MAAM,CAACD,WAAD,CAAT,mBAAhB;AAcA,eAAeS,WAAf","sourcesContent":["import React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport { addNewCellAction } from '../cell-list';\nimport { GeneralLabel, GeneralButton, GeneralForm } from '../general-styled-components';\nimport styled from 'styled-components';\n\nconst addCellInput = createStore('');\nconst changeAddCellInput = createEvent('change add cell input');\nconst resetField = createEvent('reset field');\n\naddCellInput\n  .on(changeAddCellInput, (state, payload) => payload)\n  .reset(resetField);\n\nconst AddCellForm = createComponent(\n  addCellInput, (props, text) => {\n    const addNewCell = (event) => {\n      event.preventDefault();\n      const barcode = addCellInput.getState().trim();\n      addNewCellAction(barcode);\n      resetField();\n    };\n\n    return (\n      <CustomForm>\n        <GeneralLabel>\n          <input \n            type=\"text\"\n            value={text}\n            placeholder=\"12345\"\n            onChange={event => changeAddCellInput(event.target.value)} \n          />\n          <span>\n            Cell Barcode\n          </span>\n        </GeneralLabel>\n\n        <GeneralButton \n          className=\"btn btn-outline-secondary\"\n          onClick={addNewCell}>\n          Add Cell\n        </GeneralButton>\n    </CustomForm>\n    )\n  }\n);\n\nconst CustomForm = styled(GeneralForm)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  width: 450px;\n  height: 120px;\n  padding: 5px;\n  padding-bottom: 0;\n  margin-right: 20px;\n\n  border-top: 10px solid #EB9532;\n`;\n\nexport default AddCellForm;\n"]},"metadata":{},"sourceType":"module"}