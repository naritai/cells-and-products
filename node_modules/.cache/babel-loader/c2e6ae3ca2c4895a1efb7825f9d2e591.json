{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Wave/Desktop/cells-products/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n  width: 450px;\\n  padding: 5px;\\n  padding-bottom: 0;\\n  margin-right: 20px;\\n  margin-bottom: 40px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-top: 30px;\\n\\n  > button {\\n    display: inline-block;\\n\\n    width: 200px;\\n    padding: 10px;\\n    margin-right: 10px;\\n\\n    font-size: 20px;\\n    font-weight: 600;\\n    color: #34495E;\\n\\n    &:hover {\\n      cursor: pointer;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  > span {\\n    margin-left: 10px;\\n    font-size: 20px;\\n    font-weight: 600;\\n    color: #E4F1FE;\\n    vertical-align: bottom;\\n    text-transform: uppercase;\\n  }\\n\\n  > input {\\n    display: inline-block;\\n    width: 200px;\\n    height: 40px;\\n\\n    border: none;\\n    outline: none;\\n    border-bottom: 5px solid #BDC3C7;\\n    background-color: #34495E;\\n\\n    font-size: 20px;\\n    font-weight: 600;\\n    color: #E4F1FE;\\n  }\\n\\n  margin-bottom: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport { addNewProductAction } from '../cell-list';\nimport styled from 'styled-components';\nimport { CellBarcodeInput, cellBarcodeInput } from './cell-barcode-input';\nimport { ProductBarcodeInput, productBarcodeInput } from './product-barcode-input';\nvar resetField = createEvent('reset field product form');\nvar resetAmountField = createEvent('reset amount field product form');\n\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nvar vaildateFormInputs = function vaildateFormInputs(cellBarcode, productBarcode, amount) {\n  var message = '';\n\n  if (cellBarcode.trim() === '' || productBarcode.trim() === '' || amount.trim() === '') {\n    message += \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0441\\u0435 \\u043F\\u043E\\u043B\\u044F. \";\n    return message;\n  }\n\n  ;\n\n  if (!isNumeric(amount) || amount === '0') {\n    message += \"\\u041F\\u043E\\u043B\\u0435 \\\"Amount\\\" \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u0447\\u0438\\u0441\\u043B\\u043E\\u043C \\u0438 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043F\\u0440\\u0438\\u043D\\u0438\\u043C\\u0430\\u0442\\u044C \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 0\";\n    resetAmountField();\n  }\n\n  ;\n  return message;\n};\n\nvar AddProductForm = function AddProductForm() {\n  var addProduct = function addProduct(event) {\n    event.preventDefault();\n    var cellBarcode = cellBarcodeInput.getState();\n    var productBarcode = productBarcodeInput.getState();\n    var amount = amountInput.getState();\n    var message = vaildateFormInputs(cellBarcode, productBarcode, amount);\n\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, amount);\n      resetField();\n      resetAmountField();\n    }\n  };\n\n  var takeProduct = function takeProduct(event) {\n    event.preventDefault();\n    var cellBarcode = cellBarcodeInput.getState();\n    var productBarcode = productBarcodeInput.getState();\n    var amount = amountInput.getState();\n    var message = vaildateFormInputs(cellBarcode, productBarcode, amount);\n\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, -amount);\n      resetField();\n      resetAmountField();\n    }\n  };\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(CellBarcodeInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(ProductBarcodeInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(AmountInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(ButtonWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: addProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Add Product\"), React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: takeProduct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Take Product\")));\n};\n\nvar Label = styled.label(_templateObject());\nvar ButtonWrapper = styled.div(_templateObject2());\nvar Form = styled.form(_templateObject3());\nexport default AddProductForm;","map":{"version":3,"sources":["/Users/Wave/Desktop/cells-products/src/components/add-product-form/add-product-form.js"],"names":["React","createStore","createEvent","createComponent","addNewProductAction","styled","CellBarcodeInput","cellBarcodeInput","ProductBarcodeInput","productBarcodeInput","resetField","resetAmountField","isNumeric","n","isNaN","parseFloat","isFinite","vaildateFormInputs","cellBarcode","productBarcode","amount","message","trim","AddProductForm","addProduct","event","preventDefault","getState","amountInput","alert","takeProduct","Label","label","ButtonWrapper","div","Form","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStore, createEvent } from 'effector';\nimport { createComponent } from 'effector-react';\nimport { addNewProductAction } from '../cell-list';\nimport styled from 'styled-components';\n\nimport {\n  CellBarcodeInput,\n  cellBarcodeInput \n} from './cell-barcode-input';\n\nimport {\n  ProductBarcodeInput,\n  productBarcodeInput\n} from './product-barcode-input';\n\nconst resetField = createEvent('reset field product form');\nconst resetAmountField = createEvent('reset amount field product form');\n\n\nconst isNumeric = (n) => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst vaildateFormInputs = (cellBarcode, productBarcode, amount) => {\n  let message = '';\n\n  if (cellBarcode.trim() === '' \n      || productBarcode.trim() === '' \n      || amount.trim() === '') {\n    message += `Пожалуйста, заполните все поля. `;\n    return message;\n  };\n\n  if (!isNumeric(amount) || amount === '0') {\n    message += `Поле \"Amount\" должно быть числом и не может принимать значение 0`;\n    resetAmountField();\n  };\n\n  return message;\n}\n\nconst AddProductForm = () => {\n  const addProduct = (event) => {\n    event.preventDefault();\n    const cellBarcode = cellBarcodeInput.getState();\n    const productBarcode = productBarcodeInput.getState();\n    const amount = amountInput.getState();\n    const message = vaildateFormInputs(cellBarcode, productBarcode, amount);\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, amount);\n      resetField();\n      resetAmountField();\n    }\n  };\n\n  const takeProduct = (event) => {\n    event.preventDefault();\n    const cellBarcode = cellBarcodeInput.getState();\n    const productBarcode = productBarcodeInput.getState();\n    const amount = amountInput.getState();\n    const message = vaildateFormInputs(cellBarcode, productBarcode, amount);\n    if (message) {\n      alert(message);\n      return;\n    } else {\n      addNewProductAction(cellBarcode, productBarcode, -amount);\n      resetField();\n      resetAmountField();\n    }\n  };\n\n\n  return (\n    <Form>\n      <CellBarcodeInput />\n      <ProductBarcodeInput />\n      <AmountInput />\n\n      <ButtonWrapper>\n        <button\n          className=\"btn btn-outline-secondary\"\n          onClick={addProduct}>\n          Add Product\n        </button>\n        <button\n          className=\"btn btn-outline-secondary\"\n          onClick={takeProduct}>\n          Take Product\n        </button>\n      </ButtonWrapper>\n    </Form>\n  )\n};\n\nconst Label = styled.label`\n  > span {\n    margin-left: 10px;\n    font-size: 20px;\n    font-weight: 600;\n    color: #E4F1FE;\n    vertical-align: bottom;\n    text-transform: uppercase;\n  }\n\n  > input {\n    display: inline-block;\n    width: 200px;\n    height: 40px;\n\n    border: none;\n    outline: none;\n    border-bottom: 5px solid #BDC3C7;\n    background-color: #34495E;\n\n    font-size: 20px;\n    font-weight: 600;\n    color: #E4F1FE;\n  }\n\n  margin-bottom: 10px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  margin-top: 30px;\n\n  > button {\n    display: inline-block;\n\n    width: 200px;\n    padding: 10px;\n    margin-right: 10px;\n\n    font-size: 20px;\n    font-weight: 600;\n    color: #34495E;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 450px;\n  padding: 5px;\n  padding-bottom: 0;\n  margin-right: 20px;\n  margin-bottom: 40px;\n`;\n\nexport default AddProductForm;\n"]},"metadata":{},"sourceType":"module"}